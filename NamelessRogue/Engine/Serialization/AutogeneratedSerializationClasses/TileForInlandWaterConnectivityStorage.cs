
// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
using NamelessRogue.Engine.Generation.World;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class TileForInlandWaterConnectivityStorage : IStorage<NamelessRogue.Engine.Generation.World.TileForPainting>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public IList<WaterBorderLineStorage> WaterBorderLines { get; set; }

        [FlatBufferItem(3)] public int X { get; set; }

        [FlatBufferItem(4)] public int Y { get; set; }

        [FlatBufferItem(5)] public bool IsWater { get; set; }


        public void FillFrom(NamelessRogue.Engine.Generation.World.TileForPainting component)
        {
            
          //  this.WaterBorderLines = new List<WaterBorderLineStorage>(component.WaterBorderLines.Select(x=>(Waypoints)x));
            X = component.x;
            Y = component.y;
            IsWater = component.isWater;
        }

        public void FillTo(NamelessRogue.Engine.Generation.World.TileForPainting component)
        {

            component.WaterBorderLines = new List<NamelessRogue.Engine.Generation.World.Waypoints>(this.WaterBorderLines.Select(x=>(NamelessRogue.Engine.Generation.World.Waypoints)x));
            component.x = X;
            component.y = Y;
            component.isWater = IsWater;

        }

        public static implicit operator NamelessRogue.Engine.Generation.World.TileForPainting (TileForInlandWaterConnectivityStorage thisType)
        {
            if(thisType == null) { return null; }
            NamelessRogue.Engine.Generation.World.TileForPainting result = new NamelessRogue.Engine.Generation.World.TileForPainting();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator TileForInlandWaterConnectivityStorage (NamelessRogue.Engine.Generation.World.TileForPainting  component)
        {
            if(component == null) { return null; }
            TileForInlandWaterConnectivityStorage result = new TileForInlandWaterConnectivityStorage();
            result.FillFrom(component);
            return result;
        }

    }

}

// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class StatsStorage : IStorage<NamelessRogue.Engine.Components.Stats.Stats>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public SimpleStatStorage Strength { get; set; }

        [FlatBufferItem(3)]  public SimpleStatStorage Reflexes { get; set; }

        [FlatBufferItem(4)]  public SimpleStatStorage Perception { get; set; }

        [FlatBufferItem(5)]  public SimpleStatStorage Willpower { get; set; }

        [FlatBufferItem(6)]  public SimpleStatStorage Wit { get; set; }

        [FlatBufferItem(7)]  public SimpleStatStorage Imagination { get; set; }

        [FlatBufferItem(8)]  public SimpleStatStorage Health { get; set; }

        [FlatBufferItem(9)]  public SimpleStatStorage Stamina { get; set; }

        [FlatBufferItem(10)]  public SimpleStatStorage Attack { get; set; }

        [FlatBufferItem(11)]  public SimpleStatStorage Defence { get; set; }

        [FlatBufferItem(12)]  public SimpleStatStorage AttackSpeed { get; set; }

        [FlatBufferItem(13)]  public SimpleStatStorage MoveSpeed { get; set; }

        public void FillFrom(NamelessRogue.Engine.Components.Stats.Stats component)
        {

            this.Health = component.Health;


            this.Id = component.Id == null ? null : component.Id.ToString();

            this.ParentEntityId = component.ParentEntityId == null ? null : component.ParentEntityId.ToString();

        }

        public void FillTo(NamelessRogue.Engine.Components.Stats.Stats component)
        {

            component.Health = this.Health;

            component.Id = new Guid(this.Id);

            component.ParentEntityId = new Guid(this.ParentEntityId);


        }

        public static implicit operator NamelessRogue.Engine.Components.Stats.Stats (StatsStorage thisType)
        {
            if(thisType == null) { return null; }
            NamelessRogue.Engine.Components.Stats.Stats result = new NamelessRogue.Engine.Components.Stats.Stats();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator StatsStorage (NamelessRogue.Engine.Components.Stats.Stats  component)
        {
            if(component == null) { return null; }
            StatsStorage result = new StatsStorage();
            result.FillFrom(component);
            return result;
        }

    }

}
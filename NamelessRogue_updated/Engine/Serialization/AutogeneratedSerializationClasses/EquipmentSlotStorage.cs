
// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class EquipmentSlotStorage : IStorage<NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public SlotStorage Slot { get; set; }

        [FlatBufferItem(3)]  public EquipmentStorage Equipment { get; set; }

        public void FillFrom(NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot component)
        {

            this.Slot = (SlotStorage)component.Slot;

            this.Equipment = component.Equipment;

        }

        public void FillTo(NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot component)
        {

            component.Slot = (NamelessRogue.Engine.Components.ItemComponents.Slot)this.Slot;

            component.Equipment = this.Equipment;


        }

        public static implicit operator NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot (EquipmentSlotStorage thisType)
        {
            if(thisType == null) { return null; }
            NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot result = new NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator EquipmentSlotStorage (NamelessRogue.Engine.Components.ItemComponents.EquipmentSlot  component)
        {
            if(component == null) { return null; }
            EquipmentSlotStorage result = new EquipmentSlotStorage();
            result.FillFrom(component);
            return result;
        }

    }

}

// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class StatsStorage : IStorage<NamelessRogue.Engine.Components.Stats.Stats>
    {
            [FlatBufferItem(0)]  public Guid Id { get; set; }
            [FlatBufferItem(1)]  public Guid ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public SimpleStatStorage Strength { get; set; }

        [FlatBufferItem(3)]  public SimpleStatStorage Reflexes { get; set; }

        [FlatBufferItem(4)]  public SimpleStatStorage Perception { get; set; }

        [FlatBufferItem(5)]  public SimpleStatStorage Willpower { get; set; }

        [FlatBufferItem(6)]  public SimpleStatStorage Wit { get; set; }

        [FlatBufferItem(7)]  public SimpleStatStorage Imagination { get; set; }

        [FlatBufferItem(8)]  public SimpleStatStorage Health { get; set; }

        [FlatBufferItem(9)]  public SimpleStatStorage Stamina { get; set; }

        [FlatBufferItem(10)]  public SimpleStatStorage Attack { get; set; }

        [FlatBufferItem(11)]  public SimpleStatStorage Defence { get; set; }

        [FlatBufferItem(12)]  public SimpleStatStorage AttackSpeed { get; set; }

        [FlatBufferItem(13)]  public SimpleStatStorage MoveSpeed { get; set; }

        public void FillFrom(NamelessRogue.Engine.Components.Stats.Stats component)
        {

            this.Strength = component.Strength;

            this.Reflexes = component.Reflexes;

            this.Perception = component.Perception;

            this.Willpower = component.Willpower;

            this.Wit = component.Wit;

            this.Imagination = component.Imagination;

            this.Health = component.Health;

            this.Stamina = component.Stamina;

            this.Attack = component.Attack;

            this.Defence = component.Defence;

            this.AttackSpeed = component.AttackSpeed;

            this.MoveSpeed = component.MoveSpeed;

            this.Id = component.Id;

            this.ParentEntityId = component.ParentEntityId;

        }

        public void FillTo(NamelessRogue.Engine.Components.Stats.Stats component)
        {

            component.Strength = this.Strength;

            component.Reflexes = this.Reflexes;

            component.Perception = this.Perception;

            component.Willpower = this.Willpower;

            component.Wit = this.Wit;

            component.Imagination = this.Imagination;

            component.Health = this.Health;

            component.Stamina = this.Stamina;

            component.Attack = this.Attack;

            component.Defence = this.Defence;

            component.AttackSpeed = this.AttackSpeed;

            component.MoveSpeed = this.MoveSpeed;

            component.Id = this.Id;

            component.ParentEntityId = this.ParentEntityId;


        }

        public static implicit operator NamelessRogue.Engine.Components.Stats.Stats (StatsStorage thisType)
        {
            NamelessRogue.Engine.Components.Stats.Stats result = new NamelessRogue.Engine.Components.Stats.Stats();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator StatsStorage (NamelessRogue.Engine.Components.Stats.Stats  component)
        {
            StatsStorage result = new StatsStorage();
            result.FillFrom(result);
            return result;
        }

    }

}

// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class WorldTileStorage : IStorage<NamelessRogue.Engine.Generation.World.WorldTile>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public TerrainStorage Terrain { get; set; }

        [FlatBufferItem(3)]  public BiomeStorage Biome { get; set; }

        [FlatBufferItem(4)]  public MapBuildingStorage Building { get; set; }

        [FlatBufferItem(5)]  public MapArtifactStorage Artifact { get; set; }

        [FlatBufferItem(6)]  public MetaphysicalForceStorage Affinity { get; set; }

        [FlatBufferItem(7)]  public CivilizationStorage Owner { get; set; }

        [FlatBufferItem(8)]  public RegionStorage Continent { get; set; }

        [FlatBufferItem(9)]  public RegionStorage LandmarkRegion { get; set; }

        [FlatBufferItem(10)]  public SettlementStorage Settlement { get; set; }

        [FlatBufferItem(11)]  public PointStorage WorldBoardPosiiton { get; set; }

        public void FillFrom(NamelessRogue.Engine.Generation.World.WorldTile component)
        {

            this.Terrain = component.Terrain;

            this.Biome = component.Biome;

            this.Building = component.Building;

            this.Artifact = component.Artifact;

            this.Affinity = component.Affinity;

            this.Owner = component.Owner;

            this.Continent = component.Continent;

            this.LandmarkRegion = component.LandmarkRegion;

            this.Settlement = component.Settlement;

            this.WorldBoardPosiiton = component.WorldBoardPosiiton;

        }

        public void FillTo(NamelessRogue.Engine.Generation.World.WorldTile component)
        {

            component.Terrain = this.Terrain;

            component.Biome = this.Biome;

            component.Building = this.Building;

            component.Artifact = this.Artifact;

            component.Affinity = this.Affinity;

            component.Owner = this.Owner;

            component.Continent = this.Continent;

            component.LandmarkRegion = this.LandmarkRegion;

            component.Settlement = this.Settlement;

            component.WorldBoardPosiiton = this.WorldBoardPosiiton;


        }

        public static implicit operator NamelessRogue.Engine.Generation.World.WorldTile (WorldTileStorage thisType)
        {
            NamelessRogue.Engine.Generation.World.WorldTile result = new NamelessRogue.Engine.Generation.World.WorldTile();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator WorldTileStorage (NamelessRogue.Engine.Generation.World.WorldTile  component)
        {
            WorldTileStorage result = new WorldTileStorage();
            result.FillFrom(result);
            return result;
        }

    }

}
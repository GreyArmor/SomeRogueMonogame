
// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class CitySlotStorage : IStorage<NamelessRogue.Engine.Generation.World.CitySlot>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public BoundingBoxStorage Placement { get; set; }

        [FlatBufferItem(3)]  public Boolean Occupied { get; set; }

        [FlatBufferItem(4)]  public EntityStorage OccupiedBy { get; set; }

        public void FillFrom(NamelessRogue.Engine.Generation.World.CitySlot component)
        {

            this.Placement = component.Placement;

            this.Occupied = component.Occupied;

            this.OccupiedBy.FillFrom(component.OccupiedBy);

        }

        public void FillTo(NamelessRogue.Engine.Generation.World.CitySlot component)
        {

            component.Placement = this.Placement;

            component.Occupied = this.Occupied;

            this.OccupiedBy.FillTo(component.OccupiedBy);


        }

        public static implicit operator NamelessRogue.Engine.Generation.World.CitySlot (CitySlotStorage thisType)
        {
            if(thisType == null) { return null; }
            NamelessRogue.Engine.Generation.World.CitySlot result = new NamelessRogue.Engine.Generation.World.CitySlot();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator CitySlotStorage (NamelessRogue.Engine.Generation.World.CitySlot  component)
        {
            if(component == null) { return null; }
            CitySlotStorage result = new CitySlotStorage();
            result.FillFrom(component);
            return result;
        }

    }

}
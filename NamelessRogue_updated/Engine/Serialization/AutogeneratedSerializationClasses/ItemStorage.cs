
// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class ItemStorage : IStorage<NamelessRogue.Engine.Components.ItemComponents.Item>
    {
        [FlatBufferItem(0)]  public string Id { get; set; }
        [FlatBufferItem(1)]  public string ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public Single Weight { get; set; }

        [FlatBufferItem(3)]  public ItemTypeStorage Type { get; set; }

        [FlatBufferItem(4)]  public ItemQualityStorage Quality { get; set; }

        [FlatBufferItem(5)]  public Int32 Amount { get; set; }

        [FlatBufferItem(6)]  public Int32 Level { get; set; }

        [FlatBufferItem(7)]  public String Author { get; set; }

        public void FillFrom(NamelessRogue.Engine.Components.ItemComponents.Item component)
        {

            this.Weight = component.Weight;

            this.Type = (ItemTypeStorage)component.Type;

            this.Quality = (ItemQualityStorage)component.Quality;

            this.Amount = component.Amount;

            this.Level = component.Level;

            this.Author = component.Author;

            this.Id = component.Id == null ? null : component.Id.ToString();

            this.ParentEntityId = component.ParentEntityId == null ? null : component.ParentEntityId.ToString();

        }

        public void FillTo(NamelessRogue.Engine.Components.ItemComponents.Item component)
        {

            component.Weight = this.Weight;

            component.Type = (NamelessRogue.Engine.Components.ItemComponents.ItemType)this.Type;

            component.Quality = (NamelessRogue.Engine.Components.ItemComponents.ItemQuality)this.Quality;

            component.Amount = this.Amount;

            component.Level = this.Level;

            component.Author = this.Author;

            component.Id = new Guid(this.Id);

            component.ParentEntityId = new Guid(this.ParentEntityId);


        }

        public static implicit operator NamelessRogue.Engine.Components.ItemComponents.Item (ItemStorage thisType)
        {
            if(thisType == null) { return null; }
            NamelessRogue.Engine.Components.ItemComponents.Item result = new NamelessRogue.Engine.Components.ItemComponents.Item();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator ItemStorage (NamelessRogue.Engine.Components.ItemComponents.Item  component)
        {
            if(component == null) { return null; }
            ItemStorage result = new ItemStorage();
            result.FillFrom(component);
            return result;
        }

    }

}
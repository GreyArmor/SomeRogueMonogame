
// AUTOGENERATED
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FlatSharp.Attributes;
using NamelessRogue.Engine.Serialization.SerializationIfrastructure;
using NamelessRogue.Engine.Serialization.CustomSerializationClasses;
namespace NamelessRogue.Engine.Serialization.AutogeneratedSerializationClasses
{
    [FlatBufferTable]
    public class ArmyStorage : IStorage<NamelessRogue.Engine.Generation.World.BoardPieces.Army>
    {
            [FlatBufferItem(0)]  public Guid Id { get; set; }
            [FlatBufferItem(1)]  public Guid ParentEntityId { get; set; }
        [FlatBufferItem(2)]  public Int32 Supply { get; set; }

        [FlatBufferItem(3)]  public Int32 Mana { get; set; }

        [FlatBufferItem(4)]  public Int32 MaxNumberOfUnits { get; set; }

        [FlatBufferItem(5)]  public String Name { get; set; }

        [FlatBufferItem(6)]  public Vector2Storage Position { get; set; }

        [FlatBufferItem(7)]  public Char Representation { get; set; }

        [FlatBufferItem(8)]  public ColorStorage CharColor { get; set; }

        public void FillFrom(NamelessRogue.Engine.Generation.World.BoardPieces.Army component)
        {

            this.Supply = component.Supply;

            this.Mana = component.Mana;

            this.MaxNumberOfUnits = component.MaxNumberOfUnits;

            this.Id = component.Id;

            this.Name = component.Name;

            this.Position = component.Position;

            this.Representation = component.Representation;

            this.CharColor = component.CharColor;

        }

        public void FillTo(NamelessRogue.Engine.Generation.World.BoardPieces.Army component)
        {

            component.Supply = this.Supply;

            component.Mana = this.Mana;

            component.MaxNumberOfUnits = this.MaxNumberOfUnits;

            component.Id = this.Id;

            component.Name = this.Name;

            component.Position = this.Position;

            component.Representation = this.Representation;

            component.CharColor = this.CharColor;


        }

        public static implicit operator NamelessRogue.Engine.Generation.World.BoardPieces.Army (ArmyStorage thisType)
        {
            NamelessRogue.Engine.Generation.World.BoardPieces.Army result = new NamelessRogue.Engine.Generation.World.BoardPieces.Army();
            thisType.FillTo(result);
            return result;
        }

        public static implicit operator ArmyStorage (NamelessRogue.Engine.Generation.World.BoardPieces.Army  component)
        {
            ArmyStorage result = new ArmyStorage();
            result.FillFrom(result);
            return result;
        }

    }

}